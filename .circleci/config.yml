version: 2.1
jobs:
  dependencies:
    docker:
      - image: prunel/p2pd-client:ci-debug
    steps:
      - checkout
      - run:
          name: Checkout submodules
          command: |
            git submodule update --init --recursive
            git ls-tree HEAD p2pderivatives-proto | awk '{ print $3 }' > p2pd-proto-hash.txt

      - restore_cache:
          keys:
            ## add -debug-vX suffix when debugging cache
            - npm-deps-v3-{{ .Branch }}-{{ checksum "package-lock.json" }}-debug
      - run:
          name: Install nodes modules
          command: |
            if [ -d "node_modules" ]; then
              export HAS_NPM_CACHE="true"
            fi
            npm run-script preci && (cd gen-grpc && npm run-script preci)
            if [ -z "$HAS_NPM_CACHE" ]; then
              npm ci;
              cd gen-grpc && npm run-script gen
            fi
      - save_cache:
          key: npm-deps-v3-{{ .Branch }}-{{ checksum "package-lock.json" }}-debug
          paths:
            - node_modules

      - restore_cache:
          keys:
            - gen-grpc-deps-v2-{{checksum "p2pd-proto-hash.txt"}}-debug
      - run:
          name: Generate gen grpc
          command: |
            if ls gen-grpc/*.proto >/dev/null 2>&1; then
              export HAS_GEN_GRPC_CACHE="true"
            fi
            if [ -z "$HAS_GEN_GRPC_CACHE" ]; then
              cd gen-grpc && npm run-script gen
            fi
      - save_cache:
          key: gen-grpc-deps-v2-{{checksum "p2pd-proto-hash.txt"}}-debug
          paths:
            - gen-grpc

      - persist_to_workspace:
          root: .
          paths:
            - .

  lint:
    docker:
      - image: prunel/p2pd-client:ci-debug
    steps:
      - attach_workspace:
          at: .
      - run: npm run lint
      - store_test_results:
          path: ./reports/linter
      - store_artifacts:
          path: ./reports/linter

  build:
    docker:
      - image: prunel/p2pd-client:ci-debug
    steps:
      - attach_workspace:
          at: .
      - run:
          name: build
          command: CI=false npm run build # ci to false avoid linter warnings as errors

  jest-tests:
    docker:
      - image: prunel/p2pd-client:ci-debug
    steps:
      - attach_workspace:
          at: .
      - run:
          name: ReBuild grpc for node
          command: npm rebuild grpc --runtime=node
      - run:
          name: run jest test
          command: npm run test
      - store_test_results:
          path: ./reports/jest
      - store_artifacts:
          path: ./reports/jest

  mocha-tests:
    docker:
      - image: prunel/p2pd-client:ci-browsers-debug
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Rebuild grpc for electron
          command: npm rebuild grpc --runtime=electron --target=7.0.0
      - run:
          name: Run mocha test
          command: npm run mocha -- --reporter mocha-junit-reporter
      - store_test_results:
          path: ./reports/mocha
      - store_artifacts:
          path: ./reports/mocha

workflows:
  lint-build-test:
    jobs:
      - dependencies
      - lint:
          requires:
            - dependencies
      - build:
          requires:
            - dependencies
      - jest-tests:
          requires:
            - build
      - mocha-tests:
          requires:
            - build
